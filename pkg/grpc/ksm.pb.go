// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ksm.proto

/*
Package ksm is a generated protocol buffer package.

It is generated from these files:
	ksm.proto

It has these top-level messages:
*/
package ksm

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for KSMThrottler service

type KSMThrottlerClient interface {
	Kick(ctx context.Context, in *google_protobuf.Empty, opts ...grpc.CallOption) (*google_protobuf.Empty, error)
}

type kSMThrottlerClient struct {
	cc *grpc.ClientConn
}

func NewKSMThrottlerClient(cc *grpc.ClientConn) KSMThrottlerClient {
	return &kSMThrottlerClient{cc}
}

func (c *kSMThrottlerClient) Kick(ctx context.Context, in *google_protobuf.Empty, opts ...grpc.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc.Invoke(ctx, "/ksm.KSMThrottler/Kick", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for KSMThrottler service

type KSMThrottlerServer interface {
	Kick(context.Context, *google_protobuf.Empty) (*google_protobuf.Empty, error)
}

func RegisterKSMThrottlerServer(s *grpc.Server, srv KSMThrottlerServer) {
	s.RegisterService(&_KSMThrottler_serviceDesc, srv)
}

func _KSMThrottler_Kick_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(google_protobuf.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KSMThrottlerServer).Kick(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ksm.KSMThrottler/Kick",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KSMThrottlerServer).Kick(ctx, req.(*google_protobuf.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _KSMThrottler_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ksm.KSMThrottler",
	HandlerType: (*KSMThrottlerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Kick",
			Handler:    _KSMThrottler_Kick_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ksm.proto",
}

func init() { proto.RegisterFile("ksm.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 106 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xcc, 0x2e, 0xce, 0xd5,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0xce, 0x2e, 0xce, 0x95, 0x92, 0x4e, 0xcf, 0xcf, 0x4f,
	0xcf, 0x49, 0xd5, 0x07, 0x0b, 0x25, 0x95, 0xa6, 0xe9, 0xa7, 0xe6, 0x16, 0x94, 0x54, 0x42, 0x54,
	0x18, 0xb9, 0x71, 0xf1, 0x78, 0x07, 0xfb, 0x86, 0x64, 0x14, 0xe5, 0x97, 0x94, 0xe4, 0xa4, 0x16,
	0x09, 0x99, 0x71, 0xb1, 0x78, 0x67, 0x26, 0x67, 0x0b, 0x89, 0xe9, 0x41, 0x74, 0xe9, 0xc1, 0x74,
	0xe9, 0xb9, 0x82, 0x74, 0x49, 0xe1, 0x10, 0x4f, 0x62, 0x03, 0xf3, 0x8d, 0x01, 0x01, 0x00, 0x00,
	0xff, 0xff, 0x56, 0x33, 0xff, 0x66, 0x7d, 0x00, 0x00, 0x00,
}
